services:
  chatbot:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    env_file: ".env.local"
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy

  # PostgreSQL database
  postgres:
    image: postgres:16-alpine
    env_file: ".env.local"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis for KV replacement
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    env_file: ".env.local"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # MinIO as S3-compatible storage
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    env_file: ".env.local"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - MINIO_DEFAULT_BUCKETS=chatbot-files:public
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # MinIO bucket setup service
  createbuckets:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    environment:
      - MC_HOST_myminio=http://${MINIO_ROOT_USER}:${MINIO_ROOT_PASSWORD}@minio:9000
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      mc mb --ignore-existing myminio/${S3_BUCKET};
      mc anonymous set download myminio/${S3_BUCKET};
      mc anonymous set upload myminio/${S3_BUCKET};
      echo 'MinIO bucket setup completed successfully';
      "

volumes:
  postgres_data:
  redis_data:
  minio_data: